{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","name","src","image","onClick","shuffleCard","id","Wrapper","children","Header","App","state","cards","components_Wrapper","components_Header","this","map","card","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"w4DAmBeA,MAhBf,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACTH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAA2BH,EAAMM,OAEvCL,EAAAC,EAAAC,cAAA,QAAMM,QAAS,kBAAMT,EAAMU,YAAYV,EAAMW,KAAKP,UAAU,WAA5D,wBCLSQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCK1BC,MANf,SAAgBd,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUJ,EAAMa,SACpCZ,EAAAC,EAAAC,cAAA,4BC8CWY,6MA1CbC,MAAQ,CACNC,iFAmBA,OACEhB,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAD,kBAMCC,KAAKJ,MAAMC,MAAMI,IAAI,SAAAC,GAAI,OACxBrB,EAAAC,EAAAC,cAACoB,EAAD,CACEZ,GAAIW,EAAKX,GACTa,IAAKF,EAAKX,GACVL,KAAMgB,EAAKhB,KACXE,MAAOc,EAAKd,kBAnCNiB,mBCFlBC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.44ae8692.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n            <p><strong>Name:</strong> {props.name}</p>\r\n      </div>\r\n      <span onClick={() => props.shuffleCard(props.id)} className=\"shuffle\">\r\n        ùòÖ\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n  return <div className=\"header\">{props.children}\r\n    <p>Score:</p>\r\n  </div>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\n// import Counter from \"./components/Counter\";\r\nimport cards from \"./cards.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.cards to the cards json array\r\n  state = {\r\n    cards\r\n  };\r\n// Use a for loop and bubble sort method to create shuffleCard() to execute when \r\n// Card is clicked.\r\n\r\n\r\n// const newArray = [];\r\n\r\n// Construct method to generate the card object into the new Array\r\n// to be able to manipulate the card \"clicked\" state to true and holds the value\r\n//  until the game resets.\r\n  \r\n// Create a function to increment counter when an previously unselected card is \r\n// selected\r\n\r\n// Create a function that resets the game when a previously selected Card is \r\n// selected again.\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Header>FIFE LIFE\r\n          {/* <Counter /> */}\r\n        </Header>\r\n\r\n    {/* Create a way to bring the entire Card in instead of the individaul\r\n    properties */}\r\n        {this.state.cards.map(card => (\r\n          <Card\r\n            id={card.id}\r\n            key={card.id}\r\n            name={card.name}\r\n            image={card.image}\r\n\r\n          />\r\n        ))} \r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}